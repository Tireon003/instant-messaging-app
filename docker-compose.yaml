services:
  redis_cache:
    image: redis:7.4-alpine
    ports:
      - "6379:6379"
    restart: on-failure
    env_file: .env
    networks:
      - webnet

  msg_db:
    image: postgres:17.0
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
       - 5632:${DB_PORT}
    restart: on-failure
    env_file: .env
    volumes:
      - ./pinger_db:/var/lib/postgresql/data
    networks:
      - webnet

  api_server:
    build:
      context: .
      dockerfile: api_server/Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - redis_cache
      - msg_db
      - bot_notificator
    restart: on-failure
    env_file: .env
    networks:
      - webnet

  bot_notificator:
    build:
      context: .
      dockerfile: bot/Dockerfile
    restart: on-failure
    env_file: .env
    networks:
      - webnet

  messanger_client:
    build:
      context: .
      dockerfile: client/Dockerfile
    depends_on:
      - api_server
    ports:
      - "8080:80"
    restart: on-failure
    networks:
      - webnet

volumes:
  msg_db:

networks:
  webnet: